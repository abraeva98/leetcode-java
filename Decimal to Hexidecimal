class Solution {
    public String toHexspeak(String num) {
        long nextVal = Long.parseLong(num);
        List<Integer> hexidecimal = new ArrayList<>();

        while(nextVal > 0) {
            int rem = (int) (nextVal % 16);
            if(rem > 1 && rem < 10) return "ERROR";
            hexidecimal.add(rem);
            nextVal = nextVal / 16;
        }

        char[] hexi = {'A', 'B', 'C', 'D', 'E', 'F'};
        List<Object> res = new ArrayList<>();
        System.out.println(hexidecimal);
        for(int i = hexidecimal.size() - 1; i >= 0; i --) {
            if(hexidecimal.get(i) >= 10) {
                res.add(hexi[hexidecimal.get(i) - 10]);
            } else if(hexidecimal.get(i) == 0) {
                res.add('O');
            } else if(hexidecimal.get(i) == 1) {
                res.add('I');
            } else {
                res.add(hexidecimal.get(i));
            }
        }
        
        return res.stream().map(Object::toString).collect(Collectors.joining(""));
    }
}
